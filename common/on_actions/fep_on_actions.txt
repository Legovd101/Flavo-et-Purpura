on_startup = {
	events = {
		flavor_ven.0
	}
	set_variable = {
		which = latin_succession_score
		value = 0
	}
	if = {
		limit = { tag = VEN }
		save_global_event_target_as = current_rector
		if = { limit = { ai = no}
			set_variable = {
				which = latin_succession_score
				value = 200
			}
			set_variable = {
				which = latin_unity
				value = 30
			}
		}
	}
	if = {
		limit = { has_subject_of_type = league_member }
		league_successor_calculation_effect = yes
		league_unity_calculation_effect = yes

	}
	set_variable = {
		which = latin_unity_gain
		value = 0
	}
	if = {
		limit = { is_in_latin_league = yes }
		set_variable = {
			which = latin_succession_score
			value = 0
		}
	
	}
# random_country = {
	# 	limit = { culture_group = latin }
	# 	save_global_event_target_as = current_rector
	# }
}
on_monarch_death = {
	events = {
		flavor_blu.1			#Death of Kaidu Khan
	}
}
on_new_monarch = {
	if = {
		limit = { has_subject_of_type = league_member NOT = { has_global_flag = latin_hereditary_reform } }
		event_target:current_successor = {
			set_variable = {
				which = latin_succession_score
				which = event_target:current_rector
			}
			save_global_event_target_as = current_rector
			every_country = {
				limit = { is_in_latin_league = yes }
				if = {
					limit = { NOT = { tag = PREV } }
					PREV = {
						create_subject = {
							subject_type = league_member
							who = PREV
						}
					}
					
				}
				set_variable = {
					which = latin_succession_score
					value = 0
				}
				set_variable = {
					which = latin_unity
					value = 0
				}
			
			}
		}
	}
	events = {
		flavor_bry.1			#Brythonian Succession
		fep_italian_flavor.3		#League Succession
	}

}

# on_monarch_death = {
# 	events = {
# 	}
# }

# root = loser country, from = winner country
on_war_lost = {
	if = {
		limit = {
			FROM = { has_country_flag = shaking_off_yoke }
		}
		FROM = { clr_country_flag = shaking_off_yoke }
		BLU = {
			add_government_power = { # sets the power to the specified amount
				mechanic_type = mongol_yoke
				power_type = stranglehold
				value = -15
			}
		}
	}
	if = {
		limit = { is_in_latin_league = yes }
		subtract_variable = {
			which = latin_succession_score
			value = 30
		}
	}
}

# root = winning country, from = loser country
on_war_won = {
	if = {
		limit = {
			FROM = { has_country_flag = shaking_off_yoke }
		}
		FROM = { clr_country_flag = shaking_off_yoke }
		BLU = {
			add_government_power = { # sets the power to the specified amount
				mechanic_type = mongol_yoke
				power_type = stranglehold
				value = 10
			}
		}
	}
	if = {
		limit = { is_in_latin_league = yes }
		change_variable = {
			which = latin_succession_score
			value = 20
		}
	}
}

on_mercenary_recruited = {
	if = {
		limit = {
			FROM = {
				currently_employing_varangians_trigger = yes
			}
		}
		add_estate_loyalty = {
			estate = estate_varangians
			loyalty = 5
		}
	}
}

on_province_owner_change = {
	# European Colonies (Benin)
	if = {
		limit = {
			ROOT = {
				owner = {
					any_subject_country = {
						is_subject_of_type = european_colony
						capital_scope = { region = ROOT }
					}
				}
			}
		}
		random_subject_country = {
			limit = {
				is_subject_of_type = european_colony
				capital_scope = {
					region = ROOT
				}
			}
			ROOT = { cede_province = PREV }
		}
	}
	# Extension of Vineyard System/Establishment of Wineries (Ga√≠liza)
	if = {
		limit = {
			owner = {
				has_country_flag = wine_wank
			}
			trade_goods = wine
		}
		add_permanent_province_modifier = {
			name = locally_owned_vineyards
			duration = -1
		}
	}
	if = {
		limit = {
			owner = {
				has_country_flag = wine_wank
			}
		}
		owner = {
			every_owned_province = {
				limit = {
					NOT = {
						OR = {
							region = iberia_region
							area = corsica_area
							area = corsica_sardinia_area
							area = cyprus_area
							area = crete_area
							province_id = 118
							province_id = 151
							province_id = 316
							province_id = 341
							province_id = 358
						}
					}
				}
				province_event = {
					id = fep_iberian_flavor.11
				}
			}
		}
	}
}

on_province_religion_converted = {
}
on_province_religion_changed = {
	if = {
		limit = {
			has_province_modifier = local_jewish_community
		}
		remove_province_modifier = local_jewish_community
	}
}

on_monthly_pulse = {
	if = {
		limit = { has_country_flag = wine_wank }
		set_variable = {
			which = wine_provinces
			value = 0
		}
		set_variable = {
			which = wine_percentage_check
			value = 0
		}
		every_province = {
			limit = {
				trade_goods = wine
				OR = {
					has_province_modifier = state_owned_vineyards
					has_province_modifier = locally_owned_vineyards
				}
			}
			ROOT = {
				change_variable = {
					which = wine_provinces
					value = 1
				}
			}
		}
		every_province = {
			limit = {
				trade_goods = wine
				OR = {
					has_province_modifier = state_owned_vineyards
				}
			}
			ROOT = {
				change_variable = {
					which = wine_percentage_check
					value = 1
				}
			}
		}
		divide_variable = {
			which = wine_percentage_check
			which = wine_provinces
		}
		multiply_variable = {
			which = wine_percentage_check
			value = 100
		}
	}

	# Latin Unity Calculation
	if = {
		limit = {
			has_subject_of_type = league_member
		}
		league_unity_calculation_effect = yes
	}
	# Latin Succession Score
	if = {
		limit = { is_in_latin_league = yes }
		league_succession_score_effect = yes
	}
	# if = {
	# 	limit = { is_in_latin_league = yes }
	# 	set_variable = {
	# 		which = latin_succession_check
	# 		value = 0
	# 	}
	# }
	if = {
		limit = { has_subject_of_type = league_member }
		league_successor_calculation_effect = yes
	}
}

on_country_released = {
	THIS = {
		if = {
			limit = { culture_group = latin }
			random_country = {
				limit = { has_subject_of_type = league_member }
				create_subject = {
					subject_type = league_member
					who = PREV
				}
			}
		}
	}
}
on_create_vassal = {
	if = {
		limit = { FROM = { has_subject_of_type = league_member } ROOT = { culture_group = latin } }
		change_subject_type = {
			subject_type = league_member
		}
	}
}